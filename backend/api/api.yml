openapi: 3.0.0
info:
  description: "Plasma Lab Web API"
  version: "1.0.0"
  title: "Plasma Lab Web API"
servers:
- url: "{host}{basePath}"
  variables:
    host:
      enum:
      - ""
      - "localhost:1724"
      default: ""
    basePath:
      enum:
      - "/api/v1"
      default: "/api/v1"

tags:
- name: "login"
  description: "login"
- name: "people"
  description: "people page info"
- name: "research"
  description: "research page info"
- name: "publication"
  description: "publication page info"
- name: "event"
  description: "event page info"

paths:
  /login:
    post:
      tags: [login]
      summary: submit username and passwd
      operationId: postLogin
      requestBody:
        description: login
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginDataProp"
      responses:
        201:
          description: login successfully
        401:
          description: BAD
  /peoples:
    get:
      tags: [people]
      summary: get all members data
      operationId: getPeoplesData
      responses:
        200:
          description: success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PersonDataProp"
        404:
          description: not found
    post:
      tags: [people]
      summary: add new lab members
      operationId: createPeoplesData
      requestBody:
        description: create new members
        required: true
        content:
          application/json:
            schema:
              type: array
              items: 
                $ref: "#/components/schemas/CreatePersonDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
  /people:
    post:
      tags: [people]
      summary: add a new lab member
      operationId: createPeopleData
      requestBody:
        description: create a new member account
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePersonDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
    patch:
      tags: [people]
      summary: update a member account
      operationId: updatePeopleData
      requestBody:
        description: update a member account
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePersonDataProp"
      responses:
        201:
          description: update successfully
        401:
          description: BAD
  /people/{id}:
    delete:
      tags: [people]
      summary: delete an old account
      operationId: deletePeopleData
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        204:
          description: "Deleted successfully"
        401:
          description: bad
  /researchs:
    get:
      tags: [research]
      summary: get all research topics data
      operationId: getResearchsData
      responses:
        200:
          description: success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResearchDataProp"
        404:
          description: not found
    post:
      tags: [research]
      summary: add new research topics
      operationId: createResearchsData
      requestBody:
        description: create new research topics
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateResearchDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
  /research:
    post:
      tags: [research]
      summary: add a new research topic
      operationId: createResearchData
      requestBody:
        description: create a new research topic
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateResearchDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
    patch:
      tags: [research]
      summary: update a research topic
      operationId: updateResearchData
      requestBody:
        description: update a research topic
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateResearchDataProp"
      responses:
        201:
          description: update successfully
        401:
          description: BAD
  /research/{id}:
    delete:
      tags: [research]
      summary: delete an old research topic
      operationId: deleteResearchData
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        204:
          description: "Deleted successfully"
        401:
          description: bad
  /publications:
    get:
      tags: [publication]
      summary: get all publication data
      operationId: getPublicationsData
      responses:
        200:
          description: success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PublicationDataProp"
        404:
          description: not found
    post:
      tags: [publication]
      summary: add new publications
      operationId: createPublicationsData
      requestBody:
        description: create new publications
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreatePublicationDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
  /publication:
    post:
      tags: [publication]
      summary: add a new publication
      operationId: createPublicationData
      requestBody:
        description: create a new publication
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePublicationDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
    patch:
      tags: [publication]
      summary: update a publication
      operationId: updatePublicationData
      requestBody:
        description: update a publication
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePublicationDataProp"
      responses:
        201:
          description: update successfully
        401:
          description: BAD
  /publication/{id}:
    delete:
      tags: [publication]
      summary: delete an old publication
      operationId: deletePublicationData
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        204:
          description: "Deleted successfully"
        401:
          description: bad
  /events:
    get:
      tags: [event]
      summary: get all event data
      operationId: getEventsData
      responses:
        200:
          description: success
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventDataProp"
        404:
          description: not found
    post:
      tags: [event]
      summary: add new event topics
      operationId: createEventsData
      requestBody:
        description: create new events
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CreateEventDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
  /event:
    post:
      tags: [event]
      summary: add a new event
      operationId: createEventData
      requestBody:
        description: create a new event
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventDataProp"
      responses:
        201:
          description: create successfully
        401:
          description: BAD
  /event/{id}:
    delete:
      tags: [event]
      summary: delete an old event
      operationId: deleteEventData
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        204:
          description: "Deleted successfully"
        401:
          description: bad
security:
- bearerAuth: []

components:
  schemas:
    LoginDataProp:
      type: object
      required: [username, passwd]
      properties:
        username: {type: string}
        passwd: {type: string}
    PersonDataProp:
      type: object
      required: [id, name, position, imgPath, degree, school, department, yearStart, yearEnd]
      properties:
        id: {type: string}
        name: {type: string}
        position: {type: number, format: int64}
        imgPath: {type: string}
        degree: {type: number, format: int64}
        school: {type: string}
        department: {type: string}
        yearStart: {type: number, format: int64}
        yearEnd: {type: number, format: int64}
    DegreeDataProp:
      type: object
      required: [degree, department, school, yearStart, yearEnd]
      properties:
        degree: {type: number, format: int64}
        department: {type: string}
        school: {type: string}
        yearStart: {type: number, format: int64}
        yearEnd: {type: number, format: int64}
    CreatePersonDataProp:
      type: object
      required: [name, position, imgPath]
      properties:
        name: {type: string}
        position: {type: number, format: int64}
        imgPath: {type: string}
        bs: 
          $ref: '#/components/schemas/DegreeDataProp'
        ms: 
          $ref: '#/components/schemas/DegreeDataProp'
        phd:
          $ref: '#/components/schemas/DegreeDataProp'
    UpdateDegreeDataProp:
      type: object
      required: []
      properties:
        degree: {type: number, format: int64}
        department: {type: string}
        school: {type: string}
        yearStart: {type: number, format: int64}
        yearEnd: {type: number, format: int64}
    UpdatePersonDataProp:
      type: object
      required: [id]
      properties:
        id: {type: string}
        name: {type: string}
        position: {type: number, format: int64}
        bs: 
          $ref: '#/components/schemas/UpdateDegreeDataProp'
        ms: 
          $ref: '#/components/schemas/UpdateDegreeDataProp'
        phd:
          $ref: '#/components/schemas/UpdateDegreeDataProp'
    ResearchDataProp:
      type: object
      required: [id, title, imgPath, description, reference]
      properties:
        id: {type: string}
        title: {type: string}
        imgPath: {type: string}
        description: {type: string}
        reference: {type: string}
    CreateResearchDataProp:
      type: object
      required: [title, imgPath, description, reference]
      properties:
        title: {type: string}
        imgPath: {type: string}
        description: {type: string}
        reference: {type: string}
    UpdateResearchDataProp:
      type: object
      required: [id]
      properties:
        id: {type: string}
        title: {type: string}
        description: {type: string}
        reference: {type: string}
    PublicationDataProp:
      type: object
      required: [id, year, detail]
      properties:
        id: {type: string}
        year: {type: number, format: int64}
        detail: {type: string}
    CreatePublicationDataProp:
      type: object
      required: [year, detail]
      properties:
        year: {type: number, format: int64}
        detail: {type: string}
    UpdatePublicationDataProp:
      type: object
      required: [id]
      properties:
        id: {type: string}
        year: {type: number, format: int64}
        detail: {type: string} 
    EventDataProp:
      type: object
      required: [id, year, imgPath]
      properties:
        id: {type: string}
        year: {type: number, format: int64}
        imgPath: {type: string}
    CreateEventDataProp:
      type: object
      required: [year, imgPath]
      properties:
        year: {type: number, format: int64}
        imgPath: {type: string}
    